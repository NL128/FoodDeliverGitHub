@model DomainLayer.MenuAndProducts
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

   <link href="~/Content/RestoranStrana.css" rel="stylesheet" />
   <input type="hidden" id="storeElementId" value="@Model.RestoranID"/>
   <div class="container">
       <div class="image_Area">
           <img src="~/Images/cover.png" alt="deo za restoran" />
           <div class="storeDetails" id="updateStoreDetails">

           </div>
       </div>
       <div class="holder_mid">
           <div class="menuRight">
               <div class="leftArea">
                   <h3>Jelovnik</h3>
                   <ul>
                       @foreach (var menu in Model.menus)
                       {
                           <li><a href="#@menu.MenuName"> @menu.MenuName</a></li>
                       }
                   </ul>
               </div>
               <div class="rightArea">
                   @for (int i = 0; i < Model.menus.Count; i++)
                   {
                       <h3 id="@Model.menus[i].MenuName">@Model.menus[i].MenuName</h3>
                       <ul class="products_set">
                           @{ 
                               var list = Model.proizvods.Where(x => x.MenuId == Model.menus[i].ID).ToList();
                           }
                           @for (int j = 0; j < list.Count(); j++)
                           {
                               <li id="@list[j].ID @list[j].MenuId" onclick="addToCart(this.id)"><span >@list[j].ProizvodIme <br /></span> <span> @list[j].Cena RSD</span></li><br>
                           }
                       </ul>
                   }
               </div>
               <div class="leftArea">
                   <h3>Korpa</h3>
                   <ul id="korpaId">

                   </ul>
                  
                   <hr />
                   <a ><span>Total: </span><span id="showCartTotal"></span></a>
               </div>
              
           </div>
       </div>
   </div>
   
   <script>
      var cartOriginal = [];
      function addToCart(card) {
          let split = card.split(' ');
          let cardId = parseInt(split[0]);

          let menuId = parseInt(split[1]);
          let composedKey = cardId + menuId;
          let cart = document.getElementById("korpaId");
          let cartItem = {
              itemId: composedKey,
              added: 0,
              name: "",
              price:0
          }
          let hasItem = false;
          let parseRawJson =JSON.stringify( @Html.Raw(Json.Encode(Model.proizvods)));
          console.log(parseRawJson);
          let parseRaw = JSON.parse(parseRawJson);
          for (let i = 0; i < cartOriginal.length; i++) {
              if (cartOriginal[i] != null) {
                  if (cartOriginal[i].itemId == composedKey) {
                      cartOriginal[i].added = parseInt(cartOriginal[i].added) + 1;
                      for (let j = 0; j < parseRaw.length; j++) {
                          if (parseRaw[j].ID == cardId && parseRaw[j].MenuId == menuId) {

                              cartOriginal[i].name = parseRaw[j].ProizvodIme;
                              cartOriginal[i].price = parseRaw[j].Cena + parseRaw[j].Cena;
                          }
                      }
                      hasItem = true;
                      break;
                  }
              }
          }
          if (!hasItem) {

             
              for (let j = 0; j < parseRaw.length; j++) {
               
                      if (parseRaw[j].ID == cardId && parseRaw[j].MenuId == menuId) {
                          cartItem.added = 1;
                          cartItem.name = parseRaw[j].ProizvodIme;
                          cartItem.price = parseRaw[j].Cena;
                          cartOriginal.push(cartItem);
                      }
                  
              }

          }
          cart.innerHTML = null;
          for (let i = 0; i < cartOriginal.length; i++) {
              if (cartOriginal[i] != null) {
                  let cartItem = document.createElement("li");
                  cartItem.setAttribute("id", cartOriginal[i].itemId);
                  cartItem.setAttribute("onclick", "removeItem(this)");
                  let span = document.createElement("span");
                  let br = document.createElement("br");
                  span.innerHTML = cartOriginal[i].name;
                  span.append(br);
                  let spanPrice = document.createElement("span");
                  spanPrice.innerHTML = "x"+cartOriginal[i].added +" "+ cartOriginal[i].price;
                  cartItem.appendChild(span);
                  cartItem.appendChild(br);
                  cartItem.appendChild(spanPrice);
                
                  cart.appendChild(cartItem);
              }
          }
          recalculateTotal();
       }
       function removeItem(obj) {
           let cart = document.getElementById("korpaId");
           for (let i = 0; i < cartOriginal.length; i++) {
               if (cartOriginal[i] != null) {
                   if (cartOriginal[i].itemId == obj.id) {
                       cartOriginal[i] = null;
                       cart.removeChild(obj);
                   }
               }

           }
           recalculateTotal();
          

       }
       function recalculateTotal() {
           let total = document.getElementById("showCartTotal");
           let temp = 0;
           for (let i = 0; i < cartOriginal.length; i++) {
               if (cartOriginal[i] != null) {
                   temp += parseFloat(cartOriginal[i].price);
               }
           }
           
           total.innerHTML = temp;
       }
      function onLoadPerformInit() {
          let storeArea = document.getElementById("updateStoreDetails");
          let storeId = document.getElementById("storeElementId").value;
          if (storeId != null && storeId != "undefined") {
              let store = {
                  id:storeId
              }
              let xhr = new XMLHttpRequest();
              xhr.open("GET", "GetRestoranDetails", true);
              xhr.onload = function () {
                  if (xhr.status == '200') {
                      storeArea.innerHTML = xhr.response;
                  }
              }
              xhr.send(store);


          } else {
              alert("Store is undefined !");
          }
      }
      onload = onLoadPerformInit();
   </script>
